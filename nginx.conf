server {
    listen 80;
    # For local development, use _
    # For production with domain, replace with your domain
    # Example: server_name your-domain.com;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;
    gzip_disable "MSIE [1-6]\.";

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https: http:; img-src 'self' data: blob: https: http:; font-src 'self' data: https: http:; connect-src 'self' blob: data: https: http: wss: ws:; script-src 'self' 'unsafe-inline' 'unsafe-eval' blob: data: https: http:; worker-src 'self' blob: data: https: http:; child-src 'self' blob: data: https: http:; object-src 'none';" always;
    
    # MIME type for .mjs files (ES modules) - MUST come before static assets
    location ~* \.mjs$ {
        add_header Content-Type "application/javascript" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # ðŸŽ¯ PROXY FOR UNPKG.COM - SOLVE CORS ISSUE! - MUST come before static assets
    location ~ ^/proxy/unpkg/(.*)$ {
        # DNS resolver for upstream
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Direct proxy pass with captured group - BACK TO HTTPS
        proxy_pass https://unpkg.com/$1;
        
        # Essential proxy headers ONLY
        proxy_set_header Host unpkg.com;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Minimal SSL configuration
        proxy_ssl_server_name on;
        proxy_ssl_verify off;
        
        # Shorter timeout settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # CORS headers for FFmpeg
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Cross-Origin-Resource-Policy "cross-origin" always;
        try_files $uri =404;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Main app location
    location / {
        try_files $uri $uri/ /index.html;
    }
} 